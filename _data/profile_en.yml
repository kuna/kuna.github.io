experience:

  data:
  - title: Clumio
    image: clumio.webp
    tag:
      - name: Backend
      - name: Cloud
    excerpt: Software Engineer
    time: May 2022 - Now
    summary: |
      - Develop based on Serverless Architecture (kubernetes, AWS Lambda) and deployment (terraform)
      - Backup service development & maintenance, based on Golang
        - Service improvement and development
        - Code quality improvement: Test Coverage, Refactoring, Peer review
        - Documentation for design/development
      - Big-scale scheduler
        - Schedule 2~3 billion tasks w/ requirements
      - Monitoring tool and tracing in MSA
  - title: aipets
    image: aipets.png
    tag:
      - name: Backend
      - name: Cloud
      - name: Infra
    excerpt: Software Engineer and Manager
    time: July 2022 - Now
    summary: |
      - Infra based on Terraform + AWS
        - Designed for future extension & monitoring capability
        - Used techniques: CW + ECS + ElasticCache + MySQL + MongoDB + SQS
      - Backend design and development
        - Based on Node.js + Go + protobuf
        - Developed user tracking & position share service
      - CI/CD
        - QA automation & deployment through Github Actions
      - Management
        - Blocking prevention: Do short but often meeting & sprint
        - Writing document and encouraging
  - title: TmaxData
    image: tmax.jpg
    tag:
      - name: Backend
    excerpt: Team Leader
    time: Dec 2020 - Dec 2021
    summary: |
      - Managing issues
        - Do regular meeting to manage blocking items
        - Managing techinical debt for long term issues
      - Improving individual skills
        - Study Books: Refactoring 2, Clean code
      - Improve SWE culture
        - Code review to improve readability and test coverage.
        - Encourage documentation to the members
      - Improve effciency
        - Reduce unnecessary meetings and issues
        - Documentation and tutorial for New-hire
  - title: TmaxData
    image: tmax.jpg
    tag:
      - name: Backend
    excerpt: Software Engineer
    time: Sep 2018 - May 2022
    summary: |
      RDBMS engine develop & maintenance w/ C/C++
      - Optimization
        - Minimizing lock to better performance / removing deadlock.
        - Improve caches (partition, global cache, etc.)
      - Feature development
        - PL/SQL engine development
          - Nested Type
          - Dblink protocol
          - PL/SQL VM interpreter optimizing
          - PL/SQL compiled mode design
        - Parser design & development
          - Based on Bison/Flex (DDL, PLSQL, SQL Parser)
          - Custom Parser design to reduce grammar conflict
        - PL/SQL Package development
          - Message Queue based on PL/SQL
          - Debugger based on PL/SQL
        - Gateway
        - Job module
        - DB monitoring process
      - Improve testing
        - CI pipeline management (add test)
        - Introduce unit test
      - Improve development culture
        - Peer code review
        - Write and encourage documentation
        - Add test cases
        - Create docker container for constant development/testing
      - Output
        - Removed most of the severe bugs of our module.
        - Contribute to company for developing important features, about 3x Revenue compared to 18y.

education:
  data:
  - title: B.S. graduate from Seoul National Univ.
    image: snu.jpg
    excerpt: CSE
    time: Feb 2012 - Aug 2016
    summary: |
      - Various side project on Github
      - Development activity: UPnL
      - Security activity: Guardian
      - Some events: SW Maestro, Microsoft App Hackathon ë“±
  - title: Software Maestro 3rd member
    image: swm.jpg
    excerpt: FKII
    time: Jul 2012 - Feb 2013
    summary: |
      - Streaming platform of individual (Android dev.)
      - Game controller platform (Android, server, demo game dev.)
  - title: M.S. graduate from Seoul National Univ.
    image: snu.jpg
    excerpt: CSE
    time: Sep 2016 - Aug 2018
    summary: |
      - Analyzing mRNA data
      - Model design and develop based on Tensorflow
      - Written 4 Paper (one main author)


paper:
  data:
  - title: Identifying stress-related genes and predicting stress types in Arabidopsis using logical correlation layer and CMCL loss through time-series data
    excerpt: BIBM, Main Author
    time: 2018
    summary: |
      - Model development which find out stress label and biomarkers from time-series mRNA.
      - Used model input as Extracting DEG p-value from Rscript, output as one-hot encoded label
      - Added group effect for data of small cardinality
      - Used CMCL loss for Multiple selection
      - Though small cardinality of learning data set, remarkable output had came out.
  - title: In silico experiment system
    excerpt: Methods
    time: 2018
    summary: |
      - In silico experiment in Web
      - Implementation of analyze pipeline with Flask
      - Preprocessing: DEG from Rscript
      - Used cytoscape.js for Graph rendering
      - Cross validation with real biomarker
  - title: Venn-diaNet
    excerpt: BMC
    time: 2019
    summary: |
      Venn-diaNet: venn diagram based network propagation analysis framework for comparing multiple biological experiments
      - Preprocessing: DEG from Rscript
      - Developed venn diagram rendering based on cytoscape.js
        - Usable for N-group
        - Venn diagram and node element positioning using Edge weight
        - Performance improvement using threshold for selective rendering.
  - title: HTRgene
    excerpt: BMC
    time: 2019
    summary: |
      HTRgene: integrating multiple heterogeneous time-series data to investigate cold and heat stress response signaling genes in Arabidopsis
      - New DEG Algorithm: Using clustering, find order of biomarker and it's pvalue.
      - Performance Proof: Compared to other DEG algorithm, HTRGene had found remarkable genes other tools hadn't found with Arabidopsis.


project:
  data:
  - title: Rhythmus
    excerpt: C++, OpenGL, GLFW
    tag:
      - name: Game
    time: 2018 ~
    summary: |
      - Game Engine by my own
        - Open source
        - Based on GLFW
        - Performance optimized: multicore resource loader, task scheduler for loading
        - Lag/Delay minimized: dynamic vsync, async event-handler
        - Mixer implementation with Sound effector
      - Multimedia data processing
        - Write decoding for various audio/video/image
        - Support for resource of other game (dxa)
      - Game script engine development
        - External script support (lua)
        - Game script runtime (lr2script)
        - Be-music script library engine
      - CI
        - Used googletest
  - title: bmx2ogg
    excerpt: C++
    time: 2016
    summary: |
      - Audio data processing
        - Audio decode/encode, mixing development with pitch / speed change
      - CI: travis CI for QA automation
  - title: iidx.insane.pe.kr
    excerpt: python
    tag:
      - name: Backend
      - name: Frontend
      - name: Web
    time: 2016 ~
    summary: |
      - Game record managing
        - frontend: jQuery + bootstrap
        - backend: django + mariadb(ORM)
      - Recommendation service
        - Analyze user data using jupyter notebook
        - Learn user data through Logistic regression & cross entropy
      - CD based on shell script.
  - title: iBeatcon for Android
    excerpt: Android, C#
    tag:
      - name: Android
    time: 2014
    summary: |
      - client: Android, server: C#
  - title: Controller based on Smartphone Sensor
    excerpt: Android, python
    tag:
      - name: Android
    time: 2014
    summary: |
      - server: python, client: Android
      - Motion recognition using machine learning for high accuracy
  - title: Rhythmus_java
    excerpt: Java
    tag:
      - name: Game
    time: 2013
    summary: |
      - Based on libGDX engine
        - High compatibility (Windows, Mac, Android)
        - Small time/cost for development
  - title: NovelViewer
    excerpt: C++, DirectX
    time: 2012
    summary: |
      - Text novel viewer for UMPC
      - Many features: bookmark, automatically open last closed file, etc.
      - Smooth pagination animation
      - Performance optimization: DirectX(GPU) + font cache for better UX

